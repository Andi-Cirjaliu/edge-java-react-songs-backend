{"version":3,"sources":["components/Navbar.js","context/songsContext.js","context/songsReducer.js","context/types.js","context/SongsState.js","components/RatingStar.js","components/Rating.js","components/Song.js","components/SongList.js","components/test/SongListTest.js","components/test/SongRatingTest.js","components/test/TestEndpoints.js","components/About.js","App.js","index.js"],"names":["Navbar","title","icon","className","to","defaultProps","songsContext","createContext","state","action","console","log","type","songs","payload","loading","ratedSong","updatedSongs","map","song","id","error","process","API_URL","REACT_APP_API_URL","REACT_APP_RUN_INSIDE_BACKEND","REACT_APP_RELATIVE_API_URI","window","location","href","endsWith","SongsState","props","useReducer","songsReducer","dispatch","fetchSongs","a","setLoading","axios","get","res","data","response","setError","msg","message","rateSong","rating","put","headers","setTimeout","clearError","Provider","value","children","RatingStar","index","isOn","hoverRatingStar","clickRatingStar","onMouseEnter","e","onClick","Rating","votes","useState","stars","setStars","ratedStars","setRatedStars","useContext","SongsContext","indexHovered","star","idx","alert","resetRatedStars","formattedRating","Intl","NumberFormat","maximumFractionDigits","format","style","paddingLeft","paddingRight","fontWeight","onMouseLeave","key","Song","artist","url","hovered","setHovered","fontSize","marginBottom","lineHeight","target","rel","textDecoration","onMouseOut","SongList","useEffect","marginTop","textAlign","SongListTest","result","setResult","handleTryIt","JSON","stringify","handleClear","SongRatingTest","params","setParams","handleChange","name","preventDefault","class","htmlFor","onChange","placeholder","TestEndpoints","About","App","path","exact","component","dotenv","config","ReactDOM","render","document","getElementById"],"mappings":"mOAGMA,EAAS,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACpB,OACE,yBAAKC,UAAU,qBACb,4BACE,uBAAGA,UAAWD,IACbD,GAEH,4BACE,4BACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,SAAT,mBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,aAOZJ,EAAOK,aAAe,CAClBJ,MAAO,gBACPC,KAAM,kBAGKF,Q,gDC1BAM,EAFMC,0B,OCMN,WAACC,EAAOC,GAGrB,OAFAC,QAAQC,IAAI,kBAAmBH,EAAO,WAAYC,GAE1CA,EAAOG,MACb,ICZuB,cDarB,OAAO,2BAAKJ,GAAZ,IAAmBK,MAAOJ,EAAOK,QAASC,SAAS,IACrD,ICbqB,YDcnB,IAAMC,EAAYP,EAAOK,QACnBG,EAAeT,EAAMK,MAAMK,KAAI,SAACC,GAAD,OACnCA,EAAKC,KAAOJ,EAAUI,GAAKJ,EAAYG,KAEzC,OAAO,2BAAKX,GAAZ,IAAmBK,MAAOI,EAAcF,SAAS,IACnD,ICduB,cDerB,OAAO,2BAAKP,GAAZ,IAAmBO,SAAS,IAC9B,ICnBqB,YDoBnB,OAAO,2BAAKP,GAAZ,IAAmBO,SAAS,EAAOM,MAAOZ,EAAOK,UACnD,ICpBuB,cDqBrB,OAAO,2BAAKN,GAAZ,IAAmBa,MAAO,OAC5B,QACE,OAAOb,IEhBbE,QAAQC,IAAI,aAD4BW,c,IAOpCC,E,EAJgFD,4PAA7EE,E,EAAAA,kBAAkBC,E,EAAAA,6BAA6BC,E,EAAAA,2BAEtDhB,QAAQC,IAAI,sBAAuBa,EAAmB,mCAAoCC,EAA8B,iCAAkCC,GAGpH,SAAjCD,GACHf,QAAQC,IAAI,wBAAyBgB,OAAOC,SAASC,OACrDN,EAAUI,OAAOC,SAASC,MACXC,SAAS,OACtBP,GAAW,KAEbA,GAAWG,IAEXhB,QAAQC,IAAI,6CAA8Ca,GAC1DD,EAAUC,GAEZd,QAAQC,IAAI,gBAAiBY,GAE7B,IAkGeQ,EAlGI,SAACC,GAClB,IAD4B,EAOFC,qBAAWC,EANf,CACpBrB,MAAO,GACPE,SAAS,EACTM,MAAO,OAJmB,mBAOrBb,EAPqB,KAOd2B,EAPc,KAUtBC,EAAU,uCAAG,8BAAAC,EAAA,6DACjB3B,QAAQC,IAAI,kBAEZ2B,IAHiB,kBAMGC,IAAMC,IAAN,UAAajB,EAAb,WANH,cAMTkB,EANS,OAOTC,EAAOD,EAAIC,KACjBhC,QAAQC,IAAI+B,GAEZP,EAAS,CAAEvB,KDnDU,cCmDSE,QAAS4B,EAAK7B,QAV7B,kBAYR6B,GAZQ,kCAcfhC,QAAQW,MAAM,KAAMsB,UACpBC,EAAS,KAAMD,SAAW,KAAMA,SAASD,KAAKG,IAAM,KAAMC,SAf3C,0DAAH,qDA+BVC,EAAQ,uCAAG,WAAO3B,EAAI4B,GAAX,iBAAAX,EAAA,6DACf3B,QAAQC,IAAI,aAAcS,EAAI,WAAY4B,GAE1CV,IAHe,kBAMKC,IAAMU,IAAN,UACb1B,EADa,kBACIH,GACpB,CAAE4B,OAAQA,GACV,CAAEE,QAAS,CAAE,eAAgB,sBATlB,cAMPT,EANO,OAWPC,EAAOD,EAAIC,KACjBhC,QAAQC,IAAI+B,GAEZP,EAAS,CAAEvB,KDrFQ,YCqFSE,QAAS4B,IAdxB,kBAgBNA,GAhBM,kCAkBbhC,QAAQW,MAAM,KAAMsB,UACpBC,EAAS,KAAMD,SAAW,KAAMA,SAASD,KAAKG,IAAM,KAAMC,SAnB7C,0DAAH,wDAwBRR,EAAa,WACjBH,EAAS,CAAEvB,KD3FY,iBC+FnBgC,EAAW,SAACvB,GAChBc,EAAS,CAAEvB,KDnGU,YCmGOE,QAASO,IAGrC8B,YAAW,kBAAMC,MAAc,MAI3BA,EAAa,WACjBjB,EAAS,CAAEvB,KD1GY,iBC6GzB,OACE,kBAAC,EAAayC,SAAd,CACEC,MAAO,CACLzC,MAAOL,EAAMK,MACbE,QAASP,EAAMO,QACfM,MAAOb,EAAMa,MACbe,aACAW,WACAH,aAGDZ,EAAMuB,WCzGEC,EAjBI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,gBAU/C,OACI,0BAAMC,aATU,SAACC,GACjBH,EAAgBF,IAQiBM,QALjB,SAACD,GACjBF,EAAgBH,KAKZ,uBAAGtD,UAAS,UAAKuD,EAAO,MAAQ,MAApB,gBC2ETM,MApFf,YAAsC,IAArB5C,EAAoB,EAApBA,GAAI4B,EAAgB,EAAhBA,OAAQiB,EAAQ,EAARA,MAAQ,EACPC,mBAAS,EAAC,GAAO,GAAO,GAAO,GAAO,IAD/B,mBAC1BC,EAD0B,KACnBC,EADmB,OAEGF,mBAAS,GAFZ,mBAE1BG,EAF0B,KAEdC,EAFc,KAI1BvB,EAAYwB,qBAAWC,GAAvBzB,SAEDY,EAAkB,SAACc,GAGnBJ,EAAa,GAIjBD,EAASD,EAAMjD,KAAI,SAACwD,EAAMC,GAAP,OAAgBF,GAAgBE,OAa/Cf,EAAkB,SAACH,GAGvB,GAAIY,EAAa,EACf,OAAOO,MAAM,wEAGfN,EAAcb,EAAQ,GAEtBV,EAAS3B,EAAIqC,EAAM,GAEnBN,YAAW,kBAAM0B,MAAmB,OAGhCA,EAAkB,WAEtBP,EAAc,IAGVQ,EAAkB,IAAIC,KAAKC,aAAa,KAAM,CAACC,sBAAuB,IAAIC,OAAOlC,GAGvF,OACE,6BACE,wCACU8B,EADV,SACiCb,EADjC,UAGA,0BACEkB,MAAO,CACLC,YAAa,OACbC,aAAc,OACdC,WAAY,SAJhB,KASA,0BAAMC,aA9Ca,SAACzB,GAGlBO,EAAa,GAIjBD,EAAS,EAAC,GAAO,GAAO,GAAO,GAAO,MAwClC,0BACEe,MAAO,CACLE,aAAc,SAFlB,QAOClB,EAAMjD,KAAI,SAACwD,EAAMjB,GAAP,OACT,kBAAC,EAAD,CACE+B,IAAK/B,EACLA,MAAOA,EACPC,KAAMgB,EACNf,gBAAiBA,EACjBC,gBAAiBA,UClDhB6B,EA3BF,SAAC,GAAY,IAAXtE,EAAU,EAAVA,KACJC,EAAsCD,EAAtCC,GAAInB,EAAkCkB,EAAlClB,MAAOyF,EAA2BvE,EAA3BuE,OAAOC,EAAoBxE,EAApBwE,IAAI1B,EAAgB9C,EAAhB8C,MAAMjB,EAAU7B,EAAV6B,OADd,EAGSkB,oBAAS,GAHlB,mBAGd0B,EAHc,KAGLC,EAHK,KAQrB,OACE,6BACE,wBAAIV,MAAO,CAAEW,SAAU,OAAQC,aAAc,MAAOC,WAAY,MAC9D,uBACEnE,KAAM8D,EACNM,OAAO,SACPC,IAAI,sBACJf,MAAOS,EAVI,CAACO,eAAgB,aAChB,CAACA,eAAgB,QAU7BtC,aAAc,kBAAMgC,GAAW,IAC/BO,WAAY,kBAAMP,GAAW,KAE5BH,EARH,MAQczF,IAGhB,kBAAC,EAAD,CAAQmB,GAAIA,EAAI4B,OAAQA,EAAQiB,MAAOA,MC6ChCoC,EAlEE,SAACrE,GAAU,MA0BIuC,qBAAWjE,GAAhCO,EA1BiB,EA0BjBA,MAAOuB,EA1BU,EA0BVA,WAQd,OANAkE,qBAAW,WACPlE,MAED,IAGIvB,EAaL,kBAAC,WAAD,KACE,wBACEsE,MAAO,CACLoB,UAAW,OACXR,aAAc,OACdS,UAAW,WAJf,wBASA,yBAAKrG,UAAU,UACZU,EAAMK,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CAAMqE,IAAKrE,EAAKC,GAAID,KAAMA,SAvB1B,sDCYGsF,EAjDM,SAACzE,GAAW,IAAD,EACAkC,mBAAS,MADT,mBACrBwC,EADqB,KACbC,EADa,KAGrBvE,EAAcmC,qBAAWC,GAAzBpC,WAEDwE,EAAW,uCAAG,WAAO9C,GAAP,eAAAzB,EAAA,sEACGD,IADH,OACVM,EADU,OAEhBiE,EAAUE,KAAKC,UAAUpE,EAAM,KAAM,IAFrB,2CAAH,sDAKXqE,EAAW,uCAAG,WAAOjD,GAAP,SAAAzB,EAAA,sDAChBsE,EAAU,MADM,2CAAH,sDAUjB,OACE,yBAAKxG,UAAU,aACb,6BACE,+CACA,6DACA,0CAEA,gDACA,yBAAKA,UAAU,QACb,4BAAQ4D,QAAS6C,EAAazG,UAAU,mBAAxC,UAGCuG,GACC,4BAAQ3C,QAASgD,EAAa5G,UAAU,iBAAxC,WAMLuG,GACC,6BACE,wBAAIvG,UAAU,QAAd,UACA,6BAAMuG,M,QCoBHM,EA9DQ,SAAChF,GAAW,IAAD,EACJkC,mBAAS,CAAC9C,GAAI,EAAG4B,OAAQ,IADrB,mBACzBiE,EADyB,KACjBC,EADiB,OAEJhD,mBAAS,MAFL,mBAEzBwC,EAFyB,KAEjBC,EAFiB,KAIzB5D,EAAYwB,qBAAWC,GAAvBzB,SAEDoE,EAAe,SAACrD,GACpBoD,EAAU,2BAAID,GAAL,kBAAcnD,EAAEmC,OAAOmB,KAAOtD,EAAEmC,OAAO3C,UAG5CsD,EAAW,uCAAG,WAAO9C,GAAP,eAAAzB,EAAA,6DAClByB,EAAEuD,iBADgB,SAGCtE,EAASkE,EAAO7F,GAAI6F,EAAOjE,QAH5B,OAGZN,EAHY,OAIlBiE,EAAUE,KAAKC,UAAUpE,IAJP,2CAAH,sDAOXqE,EAAW,uCAAG,WAAOjD,GAAP,SAAAzB,EAAA,sDAClBsE,EAAU,MADQ,2CAAH,sDAIjB,OACE,yBAAKxG,UAAU,aACb,yCACA,iEACA,0CACA,uBAAGA,UAAU,QAAb,cAEE,4BACE,uEACA,6EAGJ,gDACA,8BACE,yBAAKmH,MAAM,cACT,2BAAOC,QAAQ,MAAf,MACA,2BAAO3G,KAAK,OAAOwG,KAAK,KAAK9D,MAAO2D,EAAO7F,GAAIoG,SAAUL,EAAcM,YAAY,QAErF,yBAAKH,MAAM,cACT,2BAAOC,QAAQ,UAAf,UACA,2BAAO3G,KAAK,OAAOwG,KAAK,SAAS9D,MAAO2D,EAAOjE,OAAQwE,SAAUL,EAAcM,YAAY,YAE7F,6BACE,4BAAQ7G,KAAK,SAASmD,QAAS6C,EAAazG,UAAU,mBAAtD,UACCuG,GACC,4BAAQ9F,KAAK,QAAQmD,QAASgD,EAAa5G,UAAU,iBAArD,WAMLuG,GACC,6BACE,wBAAIvG,UAAU,QAAd,UACA,6BAAMuG,MC5CDgB,EAVO,SAAC1F,GACnB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,wBAAI7B,UAAU,QACd,kBAAC,EAAD,QCcOwH,EArBD,SAAC3F,GAEX,OACE,kBAAC,WAAD,KACE,yBAAK7B,UAAU,QAAf,4FAGE,qCACS,kBAAC,IAAD,CAAMC,GAAG,KAAT,aADT,iIAKA,gGACqE,IACnE,kBAAC,IAAD,CAAMA,GAAG,SAAT,sB,MCWGwH,MAjBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKzH,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0H,KAAK,IAAIC,OAAK,EAACC,UAAW1B,IACjC,kBAAC,IAAD,CAAOwB,KAAK,QAAQC,OAAK,EAACC,UAAWL,IACrC,kBAAC,IAAD,CAAOG,KAAK,SAASC,OAAK,EAACC,UAAWJ,S,eCflDK,EAAOC,SACPvH,QAAQC,IAAI,YAAaW,wCAEzB4G,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e9d3dee4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = ({title, icon}) => {\r\n    return (\r\n      <div className=\"navbar bg-primary\">\r\n        <h1>\r\n          <i className={icon}></i>\r\n          {title}\r\n        </h1>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/test\">Test Endpoints</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Java REST API',\r\n    icon: 'fas fa-podcast'\r\n}\r\n\r\nexport default Navbar;\r\n","import {createContext} from 'react';\r\n\r\nconst songsContext = createContext();\r\n\r\nexport default songsContext;","import {\r\n  FETCH_SONGS,\r\n  RATE_SONG,\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  console.log(\"current state: \", state, \"action: \", action);\r\n\r\n  switch (action.type) {\r\n    case FETCH_SONGS:\r\n      return { ...state, songs: action.payload, loading: false };\r\n    case RATE_SONG:\r\n      const ratedSong = action.payload;\r\n      const updatedSongs = state.songs.map((song) =>\r\n        song.id === ratedSong.id ? ratedSong : song\r\n      );\r\n      return { ...state, songs: updatedSongs, loading: false };\r\n    case SET_LOADING:\r\n      return { ...state, loading: true };\r\n    case SET_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case CLEAR_ERROR:\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_SONGS = \"FETCH_SONGS\";\r\nexport const RATE_SONG = \"RATE_SONG\";\r\n\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\nexport const SET_LOADING = \"SET_LOADING\";","import {useReducer} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {FETCH_SONGS, RATE_SONG, SET_LOADING, SET_ERROR, CLEAR_ERROR} from './types';\r\n\r\nimport SongsContext from './songsContext';\r\nimport songsReducer from './songsReducer';\r\n\r\nimport React from 'react';\r\n\r\nconst NODE_ENV = process.env.NODE_ENV ? process.env.NODE_ENV: 'development';\r\nconsole.log('NODE_ENV: ', NODE_ENV);\r\n\r\nconst {REACT_APP_API_URL,REACT_APP_RUN_INSIDE_BACKEND,REACT_APP_RELATIVE_API_URI} = process.env;\r\n// const {SERVER_URL} = window;\r\nconsole.log('REACT_APP_API_URL: ', REACT_APP_API_URL, ', REACT_APP_RUN_INSIDE_BACKEND: ', REACT_APP_RUN_INSIDE_BACKEND, ', REACT_APP_RELATIVE_API_URI: ', REACT_APP_RELATIVE_API_URI);\r\n\r\nlet API_URL;\r\nif ( REACT_APP_RUN_INSIDE_BACKEND === 'true' ) {\r\n  console.log('Use current location ', window.location.href);\r\n  API_URL = window.location.href;\r\n  if ( ! API_URL.endsWith('/') ) {\r\n    API_URL += '/';\r\n  }\r\n  API_URL += REACT_APP_RELATIVE_API_URI;\r\n} else {\r\n  console.log('The application runs outside backend. Use ', REACT_APP_API_URL);\r\n  API_URL = REACT_APP_API_URL;\r\n}\r\nconsole.log('Backend URL: ', API_URL);\r\n\r\nconst SongsState = (props) => {\r\n  const INITIAL_STATE = {\r\n    songs: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(songsReducer, INITIAL_STATE);\r\n\r\n  //fetch songs\r\n  const fetchSongs = async () => {\r\n    console.log(\"fetch songs...\");\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.get(`${API_URL}/songs`);\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: FETCH_SONGS, payload: data.songs });\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //fetch songs without to dispatch the result\r\n  // const fetchSongsWoutProcessing = async () => {\r\n  //   console.log(\"fetch songs without processing...\");\r\n\r\n  //   const res = await axios.get(`${API_URL}/songs`);\r\n  //   const data = res.data;\r\n  //   console.log(data);\r\n\r\n  //   return data;\r\n  // };\r\n\r\n  //rate song\r\n  const rateSong = async (id, rating) => {\r\n    console.log(\"rate song \", id, \" rating \", rating);\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `${API_URL}/songs/${id}`,\r\n        { rating: rating },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: RATE_SONG, payload: data });\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //set loading\r\n  const setLoading = () => {\r\n    dispatch({ type: SET_LOADING });\r\n  };\r\n\r\n  //set error\r\n  const setError = (error) => {\r\n    dispatch({ type: SET_ERROR, payload: error });\r\n\r\n    //clear error after 5 seconds\r\n    setTimeout(() => clearError(), 5000);\r\n  };\r\n\r\n  //clear error\r\n  const clearError = () => {\r\n    dispatch({ type: CLEAR_ERROR });\r\n  };\r\n\r\n  return (\r\n    <SongsContext.Provider\r\n      value={{\r\n        songs: state.songs,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        fetchSongs,\r\n        rateSong,\r\n        setError,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SongsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SongsState;\r\n","import React from 'react';\r\n\r\nconst RatingStar = ({index, isOn, hoverRatingStar, clickRatingStar}) => {\r\n\r\n    const handleHover = (e) => {\r\n        hoverRatingStar(index);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        clickRatingStar(index);\r\n    }\r\n\r\n    return (\r\n        <span onMouseEnter={handleHover} onClick={handleClick}>\r\n            <i className={`${isOn ? 'fas' : 'far'} fa-star`}></i>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default RatingStar;\r\n","import React, {useState, useContext} from 'react';\r\n\r\nimport RatingStar from './RatingStar';\r\nimport SongsContext from '../context/songsContext';\r\n\r\nfunction Rating({id, rating, votes}) {\r\n    const [stars, setStars] = useState([false, false, false, false, false]);\r\n    const [ratedStars, setRatedStars] = useState(0);\r\n\r\n    const {rateSong} = useContext(SongsContext);\r\n\r\n    const hoverRatingStar = (indexHovered) => {\r\n      // console.log(\"hover star \", indexHovered);\r\n\r\n      if (ratedStars > 0) {\r\n        return;\r\n      }\r\n\r\n      setStars(stars.map((star, idx) => (indexHovered >= idx ? true : false)));\r\n    };\r\n\r\n    const handleMouseOut = (e) => {\r\n      // console.log(\"Mouse out rating\");\r\n\r\n      if (ratedStars > 0) {\r\n        return;\r\n      }\r\n\r\n      setStars([false, false, false, false, false]);\r\n    };\r\n\r\n    const clickRatingStar = (index) => {\r\n      // console.log(\"click star \", index);\r\n\r\n      if (ratedStars > 0) {\r\n        return alert('You already rated this song! You can rate it again after 15 seconds!');\r\n      }\r\n\r\n      setRatedStars(index + 1);\r\n\r\n      rateSong(id, index+1);\r\n\r\n      setTimeout(() => resetRatedStars(), 15000);\r\n    };\r\n\r\n    const resetRatedStars = () => {\r\n      // console.log(\"reset stars...\");\r\n      setRatedStars(0);\r\n    };\r\n\r\n    const formattedRating = new Intl.NumberFormat(\"en\", {maximumFractionDigits: 1}).format(rating);\r\n    // console.log('Formatted rating: ', formattedRating);\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          Rating {formattedRating} from {votes} votes\r\n        </span>\r\n        <span\r\n          style={{\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"10px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          |\r\n        </span>\r\n        <span onMouseLeave={handleMouseOut}>\r\n          <span\r\n            style={{\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Rate\r\n          </span>\r\n          {stars.map((star, index) => (\r\n            <RatingStar\r\n              key={index}\r\n              index={index}\r\n              isOn={star}\r\n              hoverRatingStar={hoverRatingStar}\r\n              clickRatingStar={clickRatingStar}\r\n            />\r\n          ))}\r\n        </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react';\r\n\r\nimport Rating from './Rating';\r\n\r\nconst Song = ({song}) => {\r\n    const {id, title, artist,url,votes,rating} = song;\r\n\r\n    const [hovered, setHovered] = useState(false);\r\n\r\n    const styleHover = {textDecoration: 'underline'};\r\n    const styleNormal = {textDecoration: 'none'};\r\n\r\n    return (\r\n      <div>\r\n        <h4 style={{ fontSize: \"20px\", marginBottom: \"3px\", lineHeight: 1.3 }}>\r\n          <a\r\n            href={url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={hovered ? styleHover : styleNormal}\r\n            onMouseEnter={() => setHovered(true)}\r\n            onMouseOut={() => setHovered(false)}\r\n          >\r\n            {artist} - {title}\r\n          </a>\r\n        </h4>\r\n        <Rating id={id} rating={rating} votes={votes} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Song;\r\n","import React, {Fragment, useContext, useEffect} from 'react';\r\n\r\nimport Song from './Song';\r\nimport songsContext from '../context/songsContext';\r\n\r\nconst SongList = (props) => {\r\n    // const songs = [{\r\n    //     \"id\": 1,\r\n    //     \"title\": \"Savage\",\r\n    //     \"artist\": \"Megan Thee Stallion\",\r\n    //     url: \"https://www.youtube.com/watch?v=EOxj2ROIxok\",\r\n    //     \"votes\": 0,\r\n    //     \"rating\": 0.0\r\n    // },\r\n    // {\r\n    //     \"id\": 2,\r\n    //     \"title\": \"Rain On Me\",\r\n    //     \"artist\": \"Lady Gaga, Ariana Grande\",\r\n    //     url: \"https://www.youtube.com/watch?v=AoAm4om0wTs\",\r\n    //     \"votes\": 2,\r\n    //     \"rating\": 5.0\r\n    // },\r\n    // {\r\n    //     \"id\": 3,\r\n    //     \"title\": \"Do It\",\r\n    //     \"artist\": \"Chloe x Halle\",\r\n    //     url: \"https://www.youtube.com/watch?v=a9HIaGcBocc\",\r\n    //     \"votes\": 0,\r\n    //     \"rating\": 0.0\r\n    // }];\r\n\r\n    const {songs, fetchSongs} = useContext(songsContext);\r\n\r\n    useEffect( () => {\r\n        fetchSongs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // console.log(\"songs - \", songs);\r\n    if ( ! songs ) {\r\n        return (\r\n            <div>No songs were found.</div>\r\n        );\r\n    }\r\n\r\n    // const songsStyle = {\r\n    //     display: 'grid',\r\n    //     gridTemplateColumns: 'repeat(2, 0.5fr)',\r\n    //     gridGap: '1rem'\r\n    // };\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1\r\n          style={{\r\n            marginTop: \"20px\",\r\n            marginBottom: \"20px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Top Songs On Youtube\r\n        </h1>\r\n        <div className=\"grid-2\">\r\n          {songs.map((song) => (\r\n            <Song key={song.id} song={song} />\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default SongList;\r\n","import React, {useContext, useState} from 'react';\r\n\r\nimport SongsContext  from '../../context/songsContext';\r\n\r\nconst SongListTest = (props) => {\r\n    const [result, setResult] = useState(null);\r\n\r\n    const {fetchSongs} = useContext(SongsContext);\r\n\r\n    const handleTryIt = async (e) => {\r\n        const data = await fetchSongs();\r\n        setResult(JSON.stringify(data, null, 2));\r\n    };\r\n\r\n    const handleClear = async (e) => {\r\n        setResult(null);\r\n    };\r\n\r\n    // const songsStyle = {\r\n    //     display: 'grid',\r\n    //     gridTemplateColumns: 'repeat(2, 1fr)',\r\n    //     gridGap: '20px'//'0.5rem'\r\n    // };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <h3>Fetch all songs</h3>\r\n          <p>Endpoint: java_sample/v1/songs</p>\r\n          <p>Method: GET</p>\r\n          {/* <p className=\"list\">Parameters: -</p> */}\r\n          <p>Result type: JSON</p>\r\n          <div className=\"py-1\">\r\n            <button onClick={handleTryIt} className=\"btn btn-primary\">\r\n              Try it\r\n            </button>\r\n            {result && (\r\n              <button onClick={handleClear} className=\"btn btn-light\">\r\n                Clear\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {result && (\r\n          <div>\r\n            <h4 className=\"py-1\">Result</h4>\r\n            <div>{result}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SongListTest;","import React, {useContext, useState} from 'react';\r\n\r\nimport SongsContext  from '../../context/songsContext';\r\n\r\nconst SongRatingTest = (props) => {\r\n  const [params, setParams] = useState({id: 0, rating: 0});\r\n  const [result, setResult] = useState(null);\r\n\r\n  const {rateSong} = useContext(SongsContext);\r\n\r\n  const handleChange = (e) =>{\r\n    setParams({...params, [e.target.name]: e.target.value});\r\n  }\r\n\r\n  const handleTryIt = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = await rateSong(params.id, params.rating);\r\n    setResult(JSON.stringify(data));\r\n  };\r\n\r\n  const handleClear = async (e) => {\r\n    setResult(null);\r\n};\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Rate song</h3>\r\n      <p>Endpoint: java_sample/v1/songs/:id</p>\r\n      <p>Method: PUT</p>\r\n      <p className=\"list\">\r\n        Parameters:\r\n        <ul>\r\n          <li>Name: id, type: integer, required: true</li>\r\n          <li>Name: rating, type: integer, required: true</li>\r\n        </ul>\r\n      </p>\r\n      <p>Result type: JSON</p>\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"id\">Id</label>\r\n          <input type=\"text\" name=\"id\" value={params.id} onChange={handleChange} placeholder=\"id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"rating\">Rating</label>\r\n          <input type=\"text\" name=\"rating\" value={params.rating} onChange={handleChange} placeholder=\"rating\" />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={handleTryIt} className=\"btn btn-primary\">Try it</button>\r\n          {result && (\r\n            <button type=\"reset\" onClick={handleClear} className=\"btn btn-light\">\r\n              Clear\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n      {result && (\r\n        <div>\r\n          <h4 className=\"py-1\">Result</h4>\r\n          <div>{result}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongRatingTest;","import React, {Fragment} from 'react';\r\n\r\nimport SongListTest from './SongListTest';\r\nimport SongRatingTest from './SongRatingTest';\r\n\r\nconst TestEndpoints = (props) => {\r\n    return (\r\n      <Fragment>\r\n        <SongListTest />\r\n        <hr className=\"m-1\" />\r\n        <SongRatingTest />\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default TestEndpoints;","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst About = (props) => {\r\n \r\n    return (\r\n      <Fragment>\r\n        <div className=\"my-2\">\r\n          This Java application creates a REST Service that exposes a few endpoints to the\r\n          clients.\r\n          <p>\r\n            On the <Link to=\"/\">Home page</Link> you can see a demonstration of\r\n            using this REST Service in a client application. The client application\r\n            is build using React.\r\n          </p>\r\n          <p>\r\n            To see and test the exposed endpoints of the REST Service click on{\" \"}\r\n            <Link to=\"/test\">Test Endpoints</Link>\r\n          </p>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport SongsState from './context/SongsState';\nimport SongList from './components/SongList';\nimport TestEndpoints from './components/test/TestEndpoints';\nimport About from './components/About';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <SongsState>\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact component={SongList} />\n            <Route path=\"/test\" exact component={TestEndpoints} />\n            <Route path=\"/about\" exact component={About} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </SongsState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nconsole.log('API URL: ', process.env.REACT_APP_API_URL);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}